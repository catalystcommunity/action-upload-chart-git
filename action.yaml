name: 'Upload a released helm chart to a git helm charts repository'
description: 'Extracts a helm chart from a release, adds it to a git helm repository, then reindexes the repository. This action is designed to be run on a release trigger, and to extract a packaged chart in .tgz format from a .tgz file such as chart.tgz.'
inputs:
  token:
    description: 'Github token to use, must specify a PAT so that the action can clone the charts repo and push changes to it'
    required: true
  tag:
    description: 'Release tag to fetch chart from'
    required: false
    default: ${{ github.event.release.tag_name }}
  release-asset-label-contains:
    description: 'Release asset label to scan for. Release assets are scanned by lower casing the label and using a jq contains() check. The default value is `helm chart`, if your release assets are labeled differently, specify your label here'
    required: false
    default: 'helm chart'
  chart-repository:
    description: 'The git repository to upload the chart to'
    required: false
    default: ${{ github.repository_owner }}/charts
  chart-repository-ref:
    description: 'The git repository ref to push the chart to'
    required: false
    default: main
runs:
  using: "composite"
  steps:
    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.7.2
    - name: Clone charts repository
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.token }}
        repository: ${{ inputs.chart-repository }}
        ref: ${{ inputs.chart-repository-ref }}
    - name: Fetch release
      uses: robinraju/release-downloader@v1.3
      with:
        repository: ${{ github.repository }}
        tag: ${{ inputs.tag }}
        fileName: ${{ inputs.release-asset-name }}
        token: ${{ inputs.token }}
    - name: Upload chart and reindex
      shell: bash
      run: |
        assetName=$(echo $GITHUB_CONTEXT | jq -c '.event.release.assets[] | select(.label | ascii_downcase | contains("${inputs.release-asset-label-contains}")) | .name')
        echo "asset name is $assetName"
        if [ ! -f $assetName ]; then
          echo "Failed to find a release asset matching the configured label"
          exit 1
        fi
        tar -zxvf $assetName && rm $assetName
        ls -l
#        helm repo index .
#    - name: Commit changes
#      uses: stefanzweifel/git-auto-commit-action@v4
#      with:
#        commit_message: "Automation - Added new helm chart to repository"